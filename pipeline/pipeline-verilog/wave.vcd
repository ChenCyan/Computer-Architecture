$date
	Wed Jun 11 14:22:52 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testbench $end
$var reg 1 ! clk $end
$var reg 1 " reset $end
$scope module cpu0 $end
$var wire 1 # beq_taken $end
$var wire 32 $ branch_imm [31:0] $end
$var wire 1 ! clk $end
$var wire 5 % rd_wb [4:0] $end
$var wire 1 & reg_write_enable_wb $end
$var wire 1 " reset $end
$var wire 32 ' write_data_wb [31:0] $end
$var wire 1 ( wb_reg_write_out $end
$var wire 5 ) wb_rd_out [4:0] $end
$var wire 32 * wb_mem_data_out [31:0] $end
$var wire 32 + wb_alu_result_out [31:0] $end
$var wire 32 , rt_data [31:0] $end
$var wire 32 - rs_data [31:0] $end
$var wire 32 . rd_data [31:0] $end
$var wire 32 / pc_next [31:0] $end
$var wire 32 0 pc_current [31:0] $end
$var wire 1 1 mem_reg_write_out_wb $end
$var wire 1 2 mem_reg_write_out $end
$var wire 5 3 mem_rd_out_wb [4:0] $end
$var wire 5 4 mem_rd_out [4:0] $end
$var wire 32 5 mem_rd_data_out [31:0] $end
$var wire 6 6 mem_opcode_out [5:0] $end
$var wire 1 7 mem_mem_write_out $end
$var wire 1 8 mem_mem_read_out $end
$var wire 32 9 mem_mem_data_out [31:0] $end
$var wire 32 : mem_data_out [31:0] $end
$var wire 32 ; mem_alu_result_out_wb [31:0] $end
$var wire 32 < mem_alu_result_out [31:0] $end
$var wire 32 = instruction [31:0] $end
$var wire 32 > if2id_instruction [31:0] $end
$var wire 32 ? id_rt_data [31:0] $end
$var wire 5 @ id_rt [4:0] $end
$var wire 32 A id_rs_data [31:0] $end
$var wire 5 B id_rs [4:0] $end
$var wire 1 C id_reg_write $end
$var wire 5 D id_rd_out [4:0] $end
$var wire 32 E id_rd_data [31:0] $end
$var wire 5 F id_rd [4:0] $end
$var wire 6 G id_opcode [5:0] $end
$var wire 1 H id_mem_write $end
$var wire 1 I id_mem_read $end
$var wire 32 J id_imm [31:0] $end
$var wire 1 K id_beq_taken $end
$var wire 32 L ex_rt_data [31:0] $end
$var wire 32 M ex_rs_data [31:0] $end
$var wire 1 N ex_reg_write_out $end
$var wire 1 O ex_reg_write $end
$var wire 5 P ex_rd_out_out [4:0] $end
$var wire 5 Q ex_rd_out [4:0] $end
$var wire 32 R ex_rd_data_out [31:0] $end
$var wire 32 S ex_rd_data [31:0] $end
$var wire 6 T ex_opcode_out [5:0] $end
$var wire 6 U ex_opcode [5:0] $end
$var wire 1 V ex_mem_write_out $end
$var wire 1 W ex_mem_write $end
$var wire 1 X ex_mem_read_out $end
$var wire 1 Y ex_mem_read $end
$var wire 32 Z ex_imm [31:0] $end
$var wire 32 [ ex_alu_result [31:0] $end
$scope module datamemory $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var wire 32 \ write_data [31:0] $end
$var wire 1 7 mem_write_enable $end
$var wire 1 8 mem_read_enable $end
$var wire 32 ] address [31:0] $end
$var reg 32 ^ data [31:0] $end
$upscope $end
$scope module ex2mem $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var wire 1 N reg_write $end
$var wire 5 _ rd_in [4:0] $end
$var wire 32 ` rd_data_in [31:0] $end
$var wire 6 a opcode_in [5:0] $end
$var wire 1 V mem_write $end
$var wire 1 X mem_read $end
$var wire 32 b alu_result_in [31:0] $end
$var reg 32 c alu_result_out [31:0] $end
$var reg 1 8 mem_read_out $end
$var reg 1 7 mem_write_out $end
$var reg 6 d opcode_out [5:0] $end
$var reg 32 e rd_data_out [31:0] $end
$var reg 5 f rd_out [4:0] $end
$var reg 1 2 reg_write_out $end
$upscope $end
$scope module ex_stage $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var wire 32 g rt_data [31:0] $end
$var wire 32 h rs_data [31:0] $end
$var wire 1 O reg_write $end
$var wire 32 i rd_data [31:0] $end
$var wire 5 j rd [4:0] $end
$var wire 6 k opcode [5:0] $end
$var wire 1 W mem_write $end
$var wire 1 Y mem_read $end
$var wire 32 l imm [31:0] $end
$var reg 32 m alu_result [31:0] $end
$var reg 1 X mem_read_out $end
$var reg 1 V mem_write_out $end
$var reg 6 n opcode_out [5:0] $end
$var reg 32 o rd_data_out [31:0] $end
$var reg 5 p rd_out [4:0] $end
$var reg 1 N reg_write_out $end
$upscope $end
$scope module id2ex $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var wire 32 q rt_data_in [31:0] $end
$var wire 32 r rs_data_in [31:0] $end
$var wire 1 C reg_write $end
$var wire 5 s rd_in [4:0] $end
$var wire 32 t rd_data_in [31:0] $end
$var wire 6 u opcode_in [5:0] $end
$var wire 1 H mem_write $end
$var wire 1 I mem_read $end
$var wire 32 v imm_in [31:0] $end
$var reg 32 w imm_out [31:0] $end
$var reg 1 Y mem_read_out $end
$var reg 1 W mem_write_out $end
$var reg 6 x opcode_out [5:0] $end
$var reg 32 y rd_data_out [31:0] $end
$var reg 5 z rd_out [4:0] $end
$var reg 1 O reg_write_out $end
$var reg 32 { rs_data_out [31:0] $end
$var reg 32 | rt_data_out [31:0] $end
$upscope $end
$scope module id_stage $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var wire 32 } rt_data [31:0] $end
$var wire 5 ~ rt [4:0] $end
$var wire 32 !" rs_data [31:0] $end
$var wire 5 "" rs [4:0] $end
$var wire 32 #" rd_data [31:0] $end
$var wire 5 $" rd [4:0] $end
$var wire 6 %" opcode [5:0] $end
$var wire 32 &" instruction [31:0] $end
$var wire 32 '" imm_ext [31:0] $end
$var wire 16 (" imm16 [15:0] $end
$var reg 1 K beq_taken $end
$var reg 32 )" imm [31:0] $end
$var reg 1 I mem_read $end
$var reg 1 H mem_write $end
$var reg 32 *" rd_data_temp [31:0] $end
$var reg 5 +" rd_out [4:0] $end
$var reg 1 C reg_write $end
$var reg 32 ," rs_data_temp [31:0] $end
$var reg 32 -" rt_data_temp [31:0] $end
$upscope $end
$scope module if2id $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var wire 32 ." instruction_in [31:0] $end
$var reg 32 /" instruction_out [31:0] $end
$upscope $end
$scope module if_stage $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var wire 32 0" pc [31:0] $end
$var wire 32 1" instruction_pc [31:0] $end
$var reg 32 2" instruction [31:0] $end
$var reg 32 3" next_pc [31:0] $end
$scope module instMem $end
$var wire 32 4" pc [31:0] $end
$var reg 32 5" instruction [31:0] $end
$upscope $end
$upscope $end
$scope module mem2wb $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var wire 1 1 reg_write_in $end
$var wire 5 6" rd_in [4:0] $end
$var wire 32 7" mem_data_in [31:0] $end
$var wire 32 8" alu_result_in [31:0] $end
$var reg 32 9" alu_result_out [31:0] $end
$var reg 32 :" mem_data_out [31:0] $end
$var reg 5 ;" rd_out [4:0] $end
$var reg 1 ( reg_write_out $end
$upscope $end
$scope module mem_stage $end
$var wire 32 <" alu_result [31:0] $end
$var wire 32 =" alu_result_out [31:0] $end
$var wire 1 >" clk $end
$var wire 32 ?" mem_data_out [31:0] $end
$var wire 1 8 mem_read $end
$var wire 1 @" mem_read_out $end
$var wire 1 7 mem_write $end
$var wire 1 A" mem_write_out $end
$var wire 6 B" opcode [5:0] $end
$var wire 5 C" rd [4:0] $end
$var wire 32 D" rd_data [31:0] $end
$var wire 32 E" rd_data_out [31:0] $end
$var wire 5 F" rd_out [4:0] $end
$var wire 1 2 reg_write $end
$var wire 1 1 reg_write_out $end
$var wire 1 G" reset $end
$var wire 32 H" data_memory_output [31:0] $end
$scope module data_mem $end
$var wire 32 I" address [31:0] $end
$var wire 1 >" clk $end
$var wire 1 8 mem_read_enable $end
$var wire 1 7 mem_write_enable $end
$var wire 1 G" reset $end
$var wire 32 J" write_data [31:0] $end
$var reg 32 K" data [31:0] $end
$upscope $end
$upscope $end
$scope module pc_module $end
$var wire 1 # beq_taken $end
$var wire 32 L" branch_imm [31:0] $end
$var wire 1 ! clk $end
$var wire 32 M" next_pc [31:0] $end
$var wire 1 " reset $end
$var reg 32 N" pc_out [31:0] $end
$upscope $end
$scope module regfile $end
$var wire 1 ! clk $end
$var wire 5 O" rd [4:0] $end
$var wire 1 ( reg_write_enable $end
$var wire 1 " reset $end
$var wire 5 P" rs1 [4:0] $end
$var wire 5 Q" rs2 [4:0] $end
$var wire 32 R" write_data [31:0] $end
$var wire 32 S" read_data3 [31:0] $end
$var wire 32 T" read_data2 [31:0] $end
$var wire 32 U" read_data1 [31:0] $end
$var integer 32 V" i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b100000 V"
b0 U"
b0 T"
b0 S"
b0 R"
b0 Q"
b0 P"
b0 O"
b0 N"
b0 M"
bz L"
bx K"
b0 J"
b0 I"
bx H"
zG"
b0 F"
b0 E"
b0 D"
b0 C"
b0 B"
0A"
0@"
bx ?"
z>"
b0 ="
b0 <"
b0 ;"
b0 :"
b0 9"
b0 8"
bx 7"
b0 6"
b10011 5"
b0 4"
b0 3"
b0 2"
b10011 1"
b0 0"
b0 /"
b0 ."
b0 -"
b0 ,"
b0 +"
b0 *"
b0 )"
b0 ("
b0 '"
b0 &"
b0 %"
b0 $"
b0 #"
b0 ""
b0 !"
b0 ~
b0 }
b0 |
b0 {
b0 z
b0 y
b0 x
b0 w
b0 v
b0 u
b0 t
b0 s
b0 r
b0 q
b0 p
b0 o
b0 n
b0 m
b0 l
b0 k
b0 j
b0 i
b0 h
b0 g
b0 f
b0 e
b0 d
b0 c
b0 b
b0 a
b0 `
b0 _
b0 ^
b0 ]
b0 \
b0 [
b0 Z
0Y
0X
0W
0V
b0 U
b0 T
b0 S
b0 R
b0 Q
b0 P
0O
0N
b0 M
b0 L
0K
b0 J
0I
0H
b0 G
b0 F
b0 E
b0 D
1C
b0 B
b0 A
b0 @
b0 ?
b0 >
b0 =
b0 <
b0 ;
b0 :
bx 9
08
07
b0 6
b0 5
b0 4
b0 3
02
01
b0 0
b0 /
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
0(
b0 '
0&
b0 %
bz $
z#
1"
0!
$end
#5000
b100000 V"
1!
#10000
0!
#15000
b100000 V"
1!
#20000
0!
0"
#25000
1N
b100 0
b100 0"
b100 4"
b100 N"
bx *
bx :"
1O
b100 /
b100 3"
b100 M"
b10011 =
b10011 ."
b10011 2"
1!
#30000
0!
#35000
1C
b1000 0
b1000 0"
b1000 4"
b1000 N"
b10011 '"
b10011 ("
b1000 /
b1000 3"
b1000 M"
b10011 >
b10011 &"
b10011 /"
11
12
1!
#40000
0!
#45000
b1100 0
b1100 0"
b1100 4"
b1100 N"
1&
1(
b1100 /
b1100 3"
b1100 M"
1!
#50000
0!
#55000
b1001010100101100000100000 1"
b1001010100101100000100000 5"
b10000 0
b10000 0"
b10000 4"
b10000 N"
b10000 /
b10000 3"
b10000 M"
1!
#60000
0!
#65000
b10001111101010000000000000000100 1"
b10001111101010000000000000000100 5"
b10100 0
b10100 0"
b10100 4"
b10100 N"
b10100 /
b10100 3"
b10100 M"
b1001010100101100000100000 =
b1001010100101100000100000 ."
b1001010100101100000100000 2"
1!
#70000
0!
#75000
b10011 ?
b10011 q
b10011 -"
b10101100000000100000000000000000 1"
b10101100000000100000000000000000 5"
b10011 ,
b10011 }
b10011 T"
b10 A
b10 r
b10 ,"
b1011 D
b1011 s
b1011 +"
1C
b10 -
b10 !"
b10 U"
b11000 0
b11000 0"
b11000 4"
b11000 N"
b101100000100000 '"
b101100000100000 ("
b1011 F
b1011 $"
b1011 O"
b1010 @
b1010 ~
b1010 Q"
b1001 B
b1001 ""
b1001 P"
b11000 /
b11000 3"
b11000 M"
b10001111101010000000000000000100 =
b10001111101010000000000000000100 ."
b10001111101010000000000000000100 2"
b1001010100101100000100000 >
b1001010100101100000100000 &"
b1001010100101100000100000 /"
1!
#80000
0!
#85000
b1 ,
b1 }
b1 T"
b0 -
b0 !"
b0 U"
1I
b100 J
b100 v
b100 )"
1C
b0 ?
b0 q
b0 -"
b0 A
b0 r
b0 ,"
b1000 D
b1000 s
b1000 +"
bx 1"
bx 5"
b10101 [
b10101 b
b10101 m
b1011 P
b1011 _
b1011 p
b100 '"
b100 ("
b0 F
b0 $"
b0 O"
b1000 @
b1000 ~
b1000 Q"
b11101 B
b11101 ""
b11101 P"
b100011 G
b100011 u
b100011 %"
b11100 0
b11100 0"
b11100 4"
b11100 N"
b1011 Q
b1011 j
b1011 z
b10011 L
b10011 g
b10011 |
b10 M
b10 h
b10 {
b10001111101010000000000000000100 >
b10001111101010000000000000000100 &"
b10001111101010000000000000000100 /"
b11100 /
b11100 3"
b11100 M"
b10101100000000100000000000000000 =
b10101100000000100000000000000000 ."
b10101100000000100000000000000000 2"
1!
#90000
0!
#95000
1H
b1 E
b1 t
b1 *"
0C
0I
b0 J
b0 v
b0 )"
b10 D
b10 s
b10 +"
b100000 0
b100000 0"
b100000 4"
b100000 N"
b0 '"
b0 ("
b10 @
b10 ~
b10 Q"
b0 B
b0 ""
b0 P"
b101011 G
b101011 u
b101011 %"
1X
b1000 P
b1000 _
b1000 p
b100011 T
b100011 a
b100011 n
b100 [
b100 b
b100 m
b100000 /
b100000 3"
b100000 M"
bx =
bx ."
bx 2"
b10101100000000100000000000000000 >
b10101100000000100000000000000000 &"
b10101100000000100000000000000000 /"
1Y
b100011 U
b100011 k
b100011 x
b100 Z
b100 l
b100 w
b1000 Q
b1000 j
b1000 z
b0 L
b0 g
b0 |
b0 M
b0 h
b0 {
b1011 3
b1011 6"
b1011 F"
b1011 4
b1011 f
b1011 C"
b10101 ;
b10101 8"
b10101 ="
b10101 <
b10101 ]
b10101 c
b10101 <"
b10101 I"
1!
#100000
0!
#105000
bx .
bx #"
bx S"
bx ,
bx }
bx T"
bx -
bx !"
bx U"
0H
b0 E
b0 t
b0 *"
b0 D
b0 s
b0 +"
b10101 '
b10101 R"
0N
b1 R
b1 `
b1 o
1V
0X
b10 P
b10 _
b10 p
b101011 T
b101011 a
b101011 n
b0 [
b0 b
b0 m
bx '"
bx ("
bx F
bx $"
bx O"
bx @
bx ~
bx Q"
bx B
bx ""
bx P"
bx G
bx u
bx %"
b100100 0
b100100 0"
b100100 4"
b100100 N"
b10101 +
b10101 9"
b1011 %
b1011 )
b1011 ;"
1@"
18
b1000 3
b1000 6"
b1000 F"
b1000 4
b1000 f
b1000 C"
b100011 6
b100011 d
b100011 B"
b100 ;
b100 8"
b100 ="
b100 <
b100 ]
b100 c
b100 <"
b100 I"
0O
1W
0Y
b101011 U
b101011 k
b101011 x
b0 Z
b0 l
b0 w
b10 Q
b10 j
b10 z
b1 S
b1 i
b1 y
bx >
bx &"
bx /"
b100100 /
b100100 3"
b100100 M"
1!
#110000
0!
#115000
b101000 0
b101000 0"
b101000 4"
b101000 N"
b0 R
b0 `
b0 o
0V
b0 P
b0 _
b0 p
bx T
bx a
bx n
b100 '
b100 R"
b101000 /
b101000 3"
b101000 M"
0W
bx U
bx k
bx x
b0 Q
b0 j
b0 z
b0 S
b0 i
b0 y
01
02
b1 E"
b1 5
b1 \
b1 e
b1 D"
b1 J"
1A"
17
0@"
08
b10 3
b10 6"
b10 F"
b10 4
b10 f
b10 C"
b101011 6
b101011 d
b101011 B"
b0 ;
b0 8"
b0 ="
b0 <
b0 ]
b0 c
b0 <"
b0 I"
b1 :
b1 ^
b100 +
b100 9"
b1000 %
b1000 )
b1000 ;"
1!
#120000
0!
#125000
b0 '
b0 R"
b101100 0
b101100 0"
b101100 4"
b101100 N"
0&
0(
b0 +
b0 9"
b10 %
b10 )
b10 ;"
b0 :
b0 ^
b0 E"
b0 5
b0 \
b0 e
b0 D"
b0 J"
0A"
07
b0 3
b0 6"
b0 F"
b0 4
b0 f
b0 C"
bx 6
bx d
bx B"
b101100 /
b101100 3"
b101100 M"
1!
#130000
0!
#135000
b110000 0
b110000 0"
b110000 4"
b110000 N"
b110000 /
b110000 3"
b110000 M"
b0 %
b0 )
b0 ;"
1!
#140000
0!
#145000
b110100 0
b110100 0"
b110100 4"
b110100 N"
b110100 /
b110100 3"
b110100 M"
1!
#150000
0!
#155000
b111000 0
b111000 0"
b111000 4"
b111000 N"
b111000 /
b111000 3"
b111000 M"
1!
#160000
0!
#165000
b111100 0
b111100 0"
b111100 4"
b111100 N"
b111100 /
b111100 3"
b111100 M"
1!
#170000
0!
#175000
b1000000 0
b1000000 0"
b1000000 4"
b1000000 N"
b1000000 /
b1000000 3"
b1000000 M"
1!
#180000
0!
#185000
b1000100 0
b1000100 0"
b1000100 4"
b1000100 N"
b1000100 /
b1000100 3"
b1000100 M"
1!
#190000
0!
#195000
b1001000 0
b1001000 0"
b1001000 4"
b1001000 N"
b1001000 /
b1001000 3"
b1001000 M"
1!
#200000
0!
#205000
b1001100 0
b1001100 0"
b1001100 4"
b1001100 N"
b1001100 /
b1001100 3"
b1001100 M"
1!
#210000
0!
#215000
b1010000 0
b1010000 0"
b1010000 4"
b1010000 N"
b1010000 /
b1010000 3"
b1010000 M"
1!
#220000
0!
#225000
b1010100 0
b1010100 0"
b1010100 4"
b1010100 N"
b1010100 /
b1010100 3"
b1010100 M"
1!
#230000
0!
#235000
b1011000 0
b1011000 0"
b1011000 4"
b1011000 N"
b1011000 /
b1011000 3"
b1011000 M"
1!
#240000
0!
#245000
b1011100 0
b1011100 0"
b1011100 4"
b1011100 N"
b1011100 /
b1011100 3"
b1011100 M"
1!
#250000
0!
#255000
b1100000 0
b1100000 0"
b1100000 4"
b1100000 N"
b1100000 /
b1100000 3"
b1100000 M"
1!
#260000
0!
#265000
b1100100 0
b1100100 0"
b1100100 4"
b1100100 N"
b1100100 /
b1100100 3"
b1100100 M"
1!
#270000
0!
#275000
b1101000 0
b1101000 0"
b1101000 4"
b1101000 N"
b1101000 /
b1101000 3"
b1101000 M"
1!
#280000
0!
#285000
b1101100 0
b1101100 0"
b1101100 4"
b1101100 N"
b1101100 /
b1101100 3"
b1101100 M"
1!
#290000
0!
#295000
b1110000 0
b1110000 0"
b1110000 4"
b1110000 N"
b1110000 /
b1110000 3"
b1110000 M"
1!
#300000
0!
#305000
b1110100 0
b1110100 0"
b1110100 4"
b1110100 N"
b1110100 /
b1110100 3"
b1110100 M"
1!
#310000
0!
#315000
b1111000 0
b1111000 0"
b1111000 4"
b1111000 N"
b1111000 /
b1111000 3"
b1111000 M"
1!
#320000
0!
#325000
b1111100 0
b1111100 0"
b1111100 4"
b1111100 N"
b1111100 /
b1111100 3"
b1111100 M"
1!
#330000
0!
#335000
b10000000 0
b10000000 0"
b10000000 4"
b10000000 N"
b10000000 /
b10000000 3"
b10000000 M"
1!
#340000
0!
#345000
b10000100 0
b10000100 0"
b10000100 4"
b10000100 N"
b10000100 /
b10000100 3"
b10000100 M"
1!
#350000
0!
#355000
b10001000 0
b10001000 0"
b10001000 4"
b10001000 N"
b10001000 /
b10001000 3"
b10001000 M"
1!
#360000
0!
#365000
b10001100 0
b10001100 0"
b10001100 4"
b10001100 N"
b10001100 /
b10001100 3"
b10001100 M"
1!
#370000
0!
#375000
b10010000 0
b10010000 0"
b10010000 4"
b10010000 N"
b10010000 /
b10010000 3"
b10010000 M"
1!
#380000
0!
#385000
b10010100 0
b10010100 0"
b10010100 4"
b10010100 N"
b10010100 /
b10010100 3"
b10010100 M"
1!
#390000
0!
#395000
b10011000 0
b10011000 0"
b10011000 4"
b10011000 N"
b10011000 /
b10011000 3"
b10011000 M"
1!
#400000
0!
#405000
b10011100 0
b10011100 0"
b10011100 4"
b10011100 N"
b10011100 /
b10011100 3"
b10011100 M"
1!
#410000
0!
#415000
b10100000 0
b10100000 0"
b10100000 4"
b10100000 N"
b10100000 /
b10100000 3"
b10100000 M"
1!
#420000
0!
#425000
b10100100 0
b10100100 0"
b10100100 4"
b10100100 N"
b10100100 /
b10100100 3"
b10100100 M"
1!
#430000
0!
#435000
b10101000 0
b10101000 0"
b10101000 4"
b10101000 N"
b10101000 /
b10101000 3"
b10101000 M"
1!
#440000
0!
#445000
b10101100 0
b10101100 0"
b10101100 4"
b10101100 N"
b10101100 /
b10101100 3"
b10101100 M"
1!
#450000
0!
#455000
b10110000 0
b10110000 0"
b10110000 4"
b10110000 N"
b10110000 /
b10110000 3"
b10110000 M"
1!
#460000
0!
#465000
b10110100 0
b10110100 0"
b10110100 4"
b10110100 N"
b10110100 /
b10110100 3"
b10110100 M"
1!
#470000
0!
#475000
b10111000 0
b10111000 0"
b10111000 4"
b10111000 N"
b10111000 /
b10111000 3"
b10111000 M"
1!
#480000
0!
#485000
b10111100 0
b10111100 0"
b10111100 4"
b10111100 N"
b10111100 /
b10111100 3"
b10111100 M"
1!
#490000
0!
#495000
b11000000 0
b11000000 0"
b11000000 4"
b11000000 N"
b11000000 /
b11000000 3"
b11000000 M"
1!
#500000
0!
#505000
b11000100 0
b11000100 0"
b11000100 4"
b11000100 N"
b11000100 /
b11000100 3"
b11000100 M"
1!
#510000
0!
#515000
b11001000 0
b11001000 0"
b11001000 4"
b11001000 N"
b11001000 /
b11001000 3"
b11001000 M"
1!
#520000
0!
#525000
b11001100 0
b11001100 0"
b11001100 4"
b11001100 N"
b11001100 /
b11001100 3"
b11001100 M"
1!
#530000
0!
#535000
b11010000 0
b11010000 0"
b11010000 4"
b11010000 N"
b11010000 /
b11010000 3"
b11010000 M"
1!
#540000
0!
#545000
b11010100 0
b11010100 0"
b11010100 4"
b11010100 N"
b11010100 /
b11010100 3"
b11010100 M"
1!
#550000
0!
#555000
b11011000 0
b11011000 0"
b11011000 4"
b11011000 N"
b11011000 /
b11011000 3"
b11011000 M"
1!
#560000
0!
#565000
b11011100 0
b11011100 0"
b11011100 4"
b11011100 N"
b11011100 /
b11011100 3"
b11011100 M"
1!
#570000
0!
#575000
b11100000 0
b11100000 0"
b11100000 4"
b11100000 N"
b11100000 /
b11100000 3"
b11100000 M"
1!
#580000
0!
#585000
b11100100 0
b11100100 0"
b11100100 4"
b11100100 N"
b11100100 /
b11100100 3"
b11100100 M"
1!
#590000
0!
#595000
b11101000 0
b11101000 0"
b11101000 4"
b11101000 N"
b11101000 /
b11101000 3"
b11101000 M"
1!
#600000
0!
#605000
b11101100 0
b11101100 0"
b11101100 4"
b11101100 N"
b11101100 /
b11101100 3"
b11101100 M"
1!
#610000
0!
#615000
b11110000 0
b11110000 0"
b11110000 4"
b11110000 N"
b11110000 /
b11110000 3"
b11110000 M"
1!
#620000
0!
#625000
b11110100 0
b11110100 0"
b11110100 4"
b11110100 N"
b11110100 /
b11110100 3"
b11110100 M"
1!
#630000
0!
#635000
b11111000 0
b11111000 0"
b11111000 4"
b11111000 N"
b11111000 /
b11111000 3"
b11111000 M"
1!
#640000
0!
#645000
b11111100 0
b11111100 0"
b11111100 4"
b11111100 N"
b11111100 /
b11111100 3"
b11111100 M"
1!
#650000
0!
#655000
b100000000 0
b100000000 0"
b100000000 4"
b100000000 N"
b100000000 /
b100000000 3"
b100000000 M"
1!
#660000
0!
#665000
b100000100 0
b100000100 0"
b100000100 4"
b100000100 N"
b100000100 /
b100000100 3"
b100000100 M"
1!
#670000
0!
#675000
b100001000 0
b100001000 0"
b100001000 4"
b100001000 N"
b100001000 /
b100001000 3"
b100001000 M"
1!
#680000
0!
#685000
b100001100 0
b100001100 0"
b100001100 4"
b100001100 N"
b100001100 /
b100001100 3"
b100001100 M"
1!
#690000
0!
#695000
b100010000 0
b100010000 0"
b100010000 4"
b100010000 N"
b100010000 /
b100010000 3"
b100010000 M"
1!
#700000
0!
#705000
b100010100 0
b100010100 0"
b100010100 4"
b100010100 N"
b100010100 /
b100010100 3"
b100010100 M"
1!
#710000
0!
#715000
b100011000 0
b100011000 0"
b100011000 4"
b100011000 N"
b100011000 /
b100011000 3"
b100011000 M"
1!
#720000
0!
#725000
b100011100 0
b100011100 0"
b100011100 4"
b100011100 N"
b100011100 /
b100011100 3"
b100011100 M"
1!
#730000
0!
#735000
b100100000 0
b100100000 0"
b100100000 4"
b100100000 N"
b100100000 /
b100100000 3"
b100100000 M"
1!
#740000
0!
#745000
b100100100 0
b100100100 0"
b100100100 4"
b100100100 N"
b100100100 /
b100100100 3"
b100100100 M"
1!
#750000
0!
#755000
b100101000 0
b100101000 0"
b100101000 4"
b100101000 N"
b100101000 /
b100101000 3"
b100101000 M"
1!
#760000
0!
#765000
b100101100 0
b100101100 0"
b100101100 4"
b100101100 N"
b100101100 /
b100101100 3"
b100101100 M"
1!
#770000
0!
#775000
b100110000 0
b100110000 0"
b100110000 4"
b100110000 N"
b100110000 /
b100110000 3"
b100110000 M"
1!
#780000
0!
#785000
b100110100 0
b100110100 0"
b100110100 4"
b100110100 N"
b100110100 /
b100110100 3"
b100110100 M"
1!
#790000
0!
#795000
b100111000 0
b100111000 0"
b100111000 4"
b100111000 N"
b100111000 /
b100111000 3"
b100111000 M"
1!
#800000
0!
#805000
b100111100 0
b100111100 0"
b100111100 4"
b100111100 N"
b100111100 /
b100111100 3"
b100111100 M"
1!
#810000
0!
#815000
b101000000 0
b101000000 0"
b101000000 4"
b101000000 N"
b101000000 /
b101000000 3"
b101000000 M"
1!
#820000
0!
#825000
b101000100 0
b101000100 0"
b101000100 4"
b101000100 N"
b101000100 /
b101000100 3"
b101000100 M"
1!
#830000
0!
#835000
b101001000 0
b101001000 0"
b101001000 4"
b101001000 N"
b101001000 /
b101001000 3"
b101001000 M"
1!
#840000
0!
#845000
b101001100 0
b101001100 0"
b101001100 4"
b101001100 N"
b101001100 /
b101001100 3"
b101001100 M"
1!
#850000
0!
#855000
b101010000 0
b101010000 0"
b101010000 4"
b101010000 N"
b101010000 /
b101010000 3"
b101010000 M"
1!
#860000
0!
#865000
b101010100 0
b101010100 0"
b101010100 4"
b101010100 N"
b101010100 /
b101010100 3"
b101010100 M"
1!
#870000
0!
#875000
b101011000 0
b101011000 0"
b101011000 4"
b101011000 N"
b101011000 /
b101011000 3"
b101011000 M"
1!
#880000
0!
#885000
b101011100 0
b101011100 0"
b101011100 4"
b101011100 N"
b101011100 /
b101011100 3"
b101011100 M"
1!
#890000
0!
#895000
b101100000 0
b101100000 0"
b101100000 4"
b101100000 N"
b101100000 /
b101100000 3"
b101100000 M"
1!
#900000
0!
#905000
b101100100 0
b101100100 0"
b101100100 4"
b101100100 N"
b101100100 /
b101100100 3"
b101100100 M"
1!
#910000
0!
#915000
b101101000 0
b101101000 0"
b101101000 4"
b101101000 N"
b101101000 /
b101101000 3"
b101101000 M"
1!
#920000
0!
#925000
b101101100 0
b101101100 0"
b101101100 4"
b101101100 N"
b101101100 /
b101101100 3"
b101101100 M"
1!
#930000
0!
#935000
b101110000 0
b101110000 0"
b101110000 4"
b101110000 N"
b101110000 /
b101110000 3"
b101110000 M"
1!
#940000
0!
#945000
b101110100 0
b101110100 0"
b101110100 4"
b101110100 N"
b101110100 /
b101110100 3"
b101110100 M"
1!
#950000
0!
#955000
b101111000 0
b101111000 0"
b101111000 4"
b101111000 N"
b101111000 /
b101111000 3"
b101111000 M"
1!
#960000
0!
#965000
b101111100 0
b101111100 0"
b101111100 4"
b101111100 N"
b101111100 /
b101111100 3"
b101111100 M"
1!
#970000
0!
#975000
b110000000 0
b110000000 0"
b110000000 4"
b110000000 N"
b110000000 /
b110000000 3"
b110000000 M"
1!
#980000
0!
#985000
b110000100 0
b110000100 0"
b110000100 4"
b110000100 N"
b110000100 /
b110000100 3"
b110000100 M"
1!
#990000
0!
#995000
b110001000 0
b110001000 0"
b110001000 4"
b110001000 N"
b110001000 /
b110001000 3"
b110001000 M"
1!
#1000000
0!
#1005000
b110001100 0
b110001100 0"
b110001100 4"
b110001100 N"
b110001100 /
b110001100 3"
b110001100 M"
1!
#1010000
0!
#1015000
b110010000 0
b110010000 0"
b110010000 4"
b110010000 N"
b110010000 /
b110010000 3"
b110010000 M"
1!
#1020000
0!
